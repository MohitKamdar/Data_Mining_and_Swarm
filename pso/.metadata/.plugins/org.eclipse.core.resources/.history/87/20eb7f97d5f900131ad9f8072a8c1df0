package swarm;

import java.util.Vector;

public class particle {	
	Vector< Vector<Float> > current_location ;  // now current velocity
	Vector< Vector<Float> > current_velocity ;  // now current velocity
	Vector< Vector<Float> > previous_velocity ; //to keep inertia we require previous velocity
	float curr_dimension_velocity ;  // velocity now
	float curr_dimension_position ;  //position now
	long pbest ;  
	Vector< Vector<Float> > pbest_position ;  // all dimension value for pbest value
	static settings setting_for_all ;  // setting for all particles (inertia, c1, c2 , no of cluster , dimension ,etc)
	
	
	//When object initializes position and velocity initial values set 
	public particle(Vector< Vector<Float> > intial_values ,Vector< Vector<Float> > intial_velocities  )
	{
		current_location = new Vector<Vector<Float>>(intial_values);
		current_velocity = new Vector< Vector<Float> > (intial_velocities); 
	}
	public void set_position()
	{
		
	}
	public void set_velocity()
	{
		
	}
	public void set_pbest()
	{
		
	}
	public float velocity_cal_formula(float pre_vel,float curr_val, float pbest_val , float gbest_val , float random1 , float random2)
	{
		curr_dimension_velocity = (
		setting_for_all.w *  pre_vel + 
		setting_for_all.c1 * random1 * (gbest_val - curr_val) +
		setting_for_all.c2 * random2* (pbest_val -  curr_val)
		); 
		return curr_dimension_velocity ;
	}
	
	public float position_cal_formula(float pre_val , float curr_vel)
	{
		curr_dimension_position = pre_val + curr_vel ; 
		return curr_dimension_position ; 
	}
	
	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
