package dataset;

import java.io.File;
import java.util.Map;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

import swarm.settings;

public class swarm_xml_file_reader {
	
	settings setting_for_session ; 
	
	public swarm_xml_file_reader(String filename)
	{
		try{
		File xmlfilereader = new File(filename);
		DocumentBuilderFactory db_factory = DocumentBuilderFactory.newInstance();
		DocumentBuilder d_builder = db_factory.newDocumentBuilder();
		Document doc = d_builder.parse(xmlfilereader);
		doc.getDocumentElement().normalize();
		
		//Print root of xml (swarm)
		//System.out.println("root of xml file  " + doc.getDocumentElement().getNodeName());
		
		// get settings nodes 
		NodeList nodes = doc.getElementsByTagName("settings");
		// get 0th setting node (in our case only 1 setting node ) 
		Node node = nodes.item(0);

		if (node.getNodeType() == Node.ELEMENT_NODE) {
			Element element = (Element) node;
			int no_of_clus = Integer.parseInt(getValue("no_of_cluster", element));
			float w_iner = Float.parseFloat(getValue("w_inertia", element));
			float c1_gloabl = Float.parseFloat(getValue("c1_global_weight_constant", element));
			float c2_local = Float.parseFloat(getValue("c2_local_weight_constant", element));
			int max_iter = Integer.parseInt(getValue("max_no_of_iterations", element));
			String file_name= getValue("data_file_name", element);
			
			
		}
			
		
		}
		catch(Exception e)
		{
			System.out.println("Error : Parsing xml file");
		}
	}
	
	public String getValue(String tag, Element element) {
		NodeList nodes = element.getElementsByTagName(tag).item(0).getChildNodes();
		Node node = (Node) nodes.item(0);
		return node.getNodeValue();
	}


	
	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		swarm_xml_file_reader s1 = new swarm_xml_file_reader("swarm.xml") ; 
		
	}

}
